#!/bin/bash -ex
WEBROOT=/var/www/railsapp
LOGDIR=/var/log/railsapp

# update gemfile
cat >> $WEBROOT/Gemfile<<EOF
gem 'execjs'
EOF

# install bundle and generate controller
service mysql start
[ "$FAB_HTTP_PROXY" ] && export HTTP_PROXY=$FAB_HTTP_PROXY
cd $WEBROOT

bundle install
rails generate controller cp # touches development.log
chown -R www-data:www-data $LOGDIR
chown -R www-data:www-data $WEBROOT/log
chown -R www-data:www-data $WEBROOT/tmp/cache
chmod g+r $WEBROOT/config/master.key
unset HTTP_PROXY
service mysql stop

# apply railsapp webcp overlay
cp -TdR $WEBROOT.overlay $WEBROOT
rm -rf $WEBROOT.overlay

# configure tkl-webcp
sed -i "s|../images/||" /var/www/css/ui.tabs.css

cp -a /var/www/js/* $WEBROOT/app/javascript/packs/
cp -a /var/www/css/* $WEBROOT/app/assets/stylesheets/
cp -a /var/www/images/* $WEBROOT/app/assets/images/

cat >> $WEBROOT/app/javascript/tkl-webcp.js <<EOF
require("packs/ui.core.js")
require("packs/ui.tabs.js")
$(function() {
    $('#container-1 > ul').tabs({ fx: { opacity: 'toggle'} });
});
EOF

# pre-compile webcp assests
cat >> $WEBROOT/config/initializers/assets.rb <<EOF
Rails.application.config.assets.precompile += %w( ui.tabs.css )
Rails.application.config.assets.precompile += %w( base.css )
EOF

rm -rf /var/www/{js,css,images}

# remove default index
rm -f $WEBROOT/public/index.html

